#!/usr/bin/env bash
#
# This script will build a debian binary package to install a .NET Core
# APSIM Next Gen.
#
# Takes two arguments:
# 1. Version number
# 2. Optional output file name. Default value is apsim-$version.deb.

# Exit immediately upon error
set -e

# Get version number (first argument).
# Abort with error if no version number provided.
usage="Usage: $0 <Version> [outfile]"
test $# -ge 1 || (echo $usage; exit 1)
version=$1

# Get apsimx path (path of repository root)
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
pushd "$DIR/ApsimX" >/dev/null 2>&1
apsimx=$(pwd)
popd >/dev/null 2>&1

# Create data directory. (Delete if it already exists.)
inst="/usr/local/lib/apsim/$version"
apsimx_inst="data$inst"
if [[ -d $apsimx_inst ]];
then
    rm -rf "$apsimx_inst"
fi
mkdir -p "$apsimx_inst"

copy() {  rsync -aq --mkpath --exclude='*.db' --exclude='*.db-wal' --exclude='*.db-shm' $*; }
cp "$apsimx/APSIM.bib" "$apsimx_inst/"
copy "$apsimx"/ApsimNG/Resources/world/* "$apsimx_inst"/ApsimNG/Resources/world/
copy "$apsimx"/bin/Release/netcoreapp3.1/* "$apsimx_inst"/bin/
copy "$apsimx"/Examples/* "$apsimx_inst"/Examples/
copy "$apsimx"/Tests/UnderReview "$apsimx_inst"/UnderReview/

bin=data/usr/local/bin
mkdir $bin
echo exec dotnet $inst/bin/Models.dll '"$@"' >$bin/Models
echo exec dotnet $inst/bin/ApsimNG.dll '"$@"' >$bin/apsim
chmod u+x $bin/*

# Get estimated disk usage of installed package
size=$(du -sk data | cut -f 1)

# Insert version number and file size into control file.
sed -i -r "s/@Version/$version/" control
sed -i -r "s/@Size/$size/" control

# Get md5sums for all files.
pushd data >/dev/null 2>&1
find . -type f -print0 | xargs -0 md5sum >> ../md5sums
popd >/dev/null 2>&1

tar cf control.tar.gz control md5sums
tar cf data.tar.gz -C data .

outfile="apsim-$version.deb"
test -f "$outfile" && rm "$outfile"
ar r "$outfile" debian-binary control.tar.gz data.tar.gz

rm control.tar.gz
rm md5sums
git checkout --quiet control
rm data.tar.gz
rm -rf data
