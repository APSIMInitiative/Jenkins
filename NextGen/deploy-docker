#!/usr/bin/env bash
#
# This script runs on Jenkins build agents, but /not/ inside a docker
# container. It builds a docker image and pushes the image to dockerhub.
#
# Expects 1 argument, which is the name of the image to be pushed.
# This corresponds to a directory in the APSIM.Docker repository.
#
# Also requires that the following environment variables are set:
# 
# - DOCKERHUB_TOKEN: A personal access token for dockerhub, with access
#                    to the AI's dockerhub account.
# - PULL_ID:         ID of the pull request which was merged
# - MERGE_COMMIT:    Merge commit of the PR which was merged.

set -euo pipefail

# Ensure that the necessary inputs have been provioded.
test -z ${DOCKERHUB_TOKEN:+x} && ( echo "DOCKERHUB_TOKEN not set"; exit 1 )
test -z ${PULL_ID:+x} && ( echo "PULL_ID not set"; exit 1 )
test -z ${MERGE_COMMIT:+x} && ( echo "MERGE_COMMIT not set"; exit 1 )

# Get directory of script.
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Get version number.
revision=`$DIR/container-scripts/get-revision`
year=$(TZ=Australia/Brisbane date +%-Y)
month=$(TZ=Australia/Brisbane date +%-m)
version=$year.$month.$revision.0
echo version=$version

# Clone APSIM.Docker repo - this is where the dockerfiles live.
docker_repo="${PWD}/APSIM.Docker"
git clone https://github.com/APSIMInitiative/APSIM.Docker "$docker_repo"

build_image() {
    image=$1
    cd "$docker_repo/NextGen/apsimng"

    # Generate an image name.
    base_image_name=apsiminitiative/$image
    full_image=$base_image_name:$revision
    image_latest=$base_image_name:latest

    # Build image, then login and push to dockerhub.
    docker build --build-arg version=$version --build-arg commit=$MERGE_COMMIT -t $full_image --target $image .
    docker tag $full_image $image_latest
    docker login -u apsimbot -p"$DOCKERHUB_TOKEN"
    docker push $full_image
    docker push $image_latest
}

build_image apsimng
build_image apsimng-complete
build_image apsimng-gui
